
Открытый вебинар JavaScript
Обзор возможностей Node.js
Коржиков Александр

Меня хорошо слышно && видно? 
Напишите в чат, если есть проблемы!
Ставьте       если все хорошо
+

Александр Коржиков
JavaScript @ Alpari, Comindware, Tinkoff, Backbase, ING, Otus

https://github.com/korzio 
korzio@gmail.com 


Содержание
Введение
Node.js
Пример Web сервера
Структура
Стандартные модули
Примеры Callbacks / Event Loop 
NPM
package.json
cli
О курсе
Фреймворки и библиотеки


Материалы



https://nodejs.org/en/docs/guides/  Node.js core concepts
https://docs.npmjs.com/ Package manager for JavaScript


Node.js
const http = require('http')

http.createServer((req, res) => {
  res.end('Hello, World!')
}).listen(8000)
Асинхронная среда исполнения JavaScript, основанная на событийной модели, для создания эффективных сетевых приложений

Пример
const http = require('http')

http.createServer((req, res) => {
  res.end('Hello, World!')
}).listen(8000)
HTTP cервер
Какие особенности платформы Вы бы отметили для себя из этого примера?



Особенности
Исполнение JavaScript файлов с помощью комманды node (в том числе REPL) 
CommonJS формат модулей для загрузки зависимостей (также поддерживает ES Modules)
Стандартная библиотека модулей
API основанное на асинхронном паттерне Callback
ES2015 синтаксис

Демонстрация
const http = require('http')const server = http.createServer((req, res) => {  res.statusCode = 200  res.setHeader('Content-Type', 'text/plain')  res.end('Hello World\n')})server.listen(3000, '127.0.0.1', () => {  console.log('Server running')})

node
REPL
debug




Структура
Библиотека написана на C++ и JavaScript 
V8 - платформа исполнения JavaScript от компании Google (Chromium, Chrome, Opera, Brave, Yandex Browser)

Event Loop - асинхронный событийный цикл с libuv

Модули для работы с операционной системой


Вопрос
А Вы знаете какие модули включены в  стандартный дистрибутив Node.js?


Стандартные модули
Main
fs
timers
streams
Utilities
path
util
zlib
crypto
Processes
child_process
cluster
worker_threads

Protocols
http(s)
net
dns
System
os
v8
async_hooks 
perf_hooks
trace_events


Задача
Установить node и npmhttps://nodejs.org/en/download/node --version // в консолиnpm --version
Создать и запустить server.jsconsole.log(process.argv)node server hello world // в консоли

Callbacks
// defaultfs.readFile('/etc/passwd', (err, data) => {  if (err) throw err  console.log(data)})// singlefs.access('/etc/passwd', fs.constants.R_OK, 
(err) => {  console.log(err ? 'no access!' : 'read')})// ... http server ...const server = http.createServer((req, res) => {  res.statusCode = 200  res.setHeader('Content-Type', 'text/plain')  res.end('Hello World\n')})server.listen(port, hostname, () => {  console.log(`Server running at 
     http://${hostname}:${port}/`)})

default - вызывается с ошибкой или результатом
single - только с ошибкой
А также поддержка Promise
util.promisify()
fs.promises.*

Event Loop
const fs = require('fs')

setTimeout(() => console.log('timeout out'))
setImmediate(() => console.log('immediate out'))

fs.readFile('./events.js', (err, data) => {
 console.log('fs')
 process.nextTick(() => console.log('next in'))
 setTimeout(() => console.log('timeout in'))
 setImmediate(() => console.log('immediate in'))
})

const next = () => {
 console.log('next')
 process.nextTick(next)
}

next()

Q & A -> NPM
Node.js

Package Manager for JavaScript
CInpm --version
Registrynpm i
Website https://npmjs.com/ 

NPM

805,605 пакетов
Скачиваний 
за неделю - 6,365,654,697
за месяц - 27,242,106,111
React - 2,940,410

Звезд во Вселенной
1 000 000 000 000 000 000 000 

В числах

{  "name": "my_package",  "description": "",  "version": "1.0.0",  "main": "index.js",  "scripts": {    "test": "echo \"Error: no test specified\" && exit 1"  },  "repository": {    "type": "git",    "url": "https://github.com/.../my_package.git"  },  "keywords": [],  "author": "",  "license": "ISC",  "bugs": {    "url": "https://github.com/.../my_package/issues"  },  "homepage": "https://github.com/.../my_package"}
name
version - semver
main - файл по умолчанию
scripts - служебные команды

package.json

https://semver.org/ Спецификация

https://semver.npmjs.com/ Калькулятор

Semantic Versioning

dependencies, devDependencies
flag --global
node_modules 
  "dependencies": {
    "commander": "^2.7.1",
    "lodash.get": "^4.0.0",
    "lodash.isequal": "^4.0.0",
    "validator": "^9.0.0"
  },
  "description": "JSON schema validator",
  "devDependencies": {
    "coveralls": "^3.0.0",
    "grunt": "^1.0.1",
    "grunt-browserify": "^5.2.0",
    "grunt-cli": "^1.2.0",
    "grunt-contrib-copy": "^1.0.0",
    "grunt-jscs": "^3.0.1",
    "grunt-lineending": "^1.0.0",
    "jasmine-node": "^1.14.5",
    "jasmine-reporters": "^2.2.1",
    "remapify": "^2.1.0"
  }

Зависимости

Создать новый npm пакетmkdir ... && cd ... npm init # read & answer
Сохранить зависимостьnpm install --save-dev ... # copy & paste package.json > chat
Запустить скриптыecho "" > server.js # create filenpm startnpm test # npm run test
Самостоятельная работа

{  "name": "my_package",  "description": "",  "version": "1.0.0",  "main": "index.js",  "scripts": {    "test": "echo \"Error: no test specified\" && exit 1"  },  "repository": {    "type": "git",    "url": "https://github.com/.../my_package.git"  },  "keywords": [],  "author": "",  "license": "ISC",  "bugs": {    "url": "https://github.com/.../my_package/issues"  },  "homepage": "https://github.com/.../my_package"}
Основные
init
install
start 
test
run
Дополнительные
ci 
npx 

Команды

Q & A  -> О курсе
NPM

Александр Коржиков
https://github.com/korzio 
korzio@gmail.com 


Юрий Дворжецкий
Java, JavaScript @ Luxoft
Teaching - 1500+ hours, 600+ developers



Сергей Лукияненко
FullStack @ Surplex, Auxmoney, Freshcells, Tekoway
https://github.com/luchianenco
s@luchianenco.com



Владимир Клепов
FullStack @ Яндекс, Российские Суперкомпьютеры
https://thoughtspile.github.io
v.klepov@gmail.com


https://www.linkedin.com/in/surgun/

Нас больше

Modern JavaScript Frameworks
О курсе - Modern JavaScript Frameworks. Этот курс хоть и называется - Современные JavaScript Фреймворки, название немного не верно. Дело в том, что это курс не только о специализированных фреймворках - таких как Angular, но также и об окружении, в котором исполняется язык JavaScript. В начале курса мы вспомним базовые аспекты языка, некоторые дизайн паттерны и приемы. Мы рассмотрим серверную среду исполнения NodeJS, обсудим некоторые базовые концепции, являющиеся ее частью - такие как EventLoop, Streams, и другие. Также мы обсудим популярные библиотеки - VueJS и ReactJS, используемые для создания веб приложений.

Какие JavaScript фреймворки Вы используете?
Какие JavaScript библиотеки Вы используете?
В чем отличие фреймворков от библиотек? 
Вопрос
https://jsfiddle.net/chrisvfritz/50wL7mdz/

Что здесь происходит?
$('ul li').addClass(function(index) {
  return 'item-' + index
})
jQuery
https://jsfiddle.net/chrisvfritz/50wL7mdz/

Что здесь происходит?
Что общего с предыдущим примером?
var object = { 'a': 1 };
var other = { 'a': 1 };
_.isEqual(object, other);
// => true
object === other;
// => false
Lodash
https://jsfiddle.net/chrisvfritz/50wL7mdz/

Что здесь происходит?
В чем разница с предыдущими примерами?
import { Component, OnInit } from '@angular/core';
import { Hero } from '../hero';

@Component({
 selector: 'app-heroes',
 templateUrl: './heroes.component.html',
 styleUrls: ['./heroes.component.css']
})
export class HeroesComponent implements OnInit {
 hero: Hero = {
   id: 1,
   name: 'Windstorm'
 };

 constructor() {}
 ngOnInit() {}
}

/*
 * Copyright 2017-2018 Google Inc. All Rights Reserved.
 * Use of this source code is governed by an MIT-style   * license that
 * can be found in the LICENSE file at   * http://angular.io/license
 */
Angular
https://jsfiddle.net/chrisvfritz/50wL7mdz/

библиотека определяет API и может использоваться "императивно"
фреймворк определяет протоколы, классы и методологии и решает когда запустить код разработчика
Frameworks VS Libraries
https://jsfiddle.net/chrisvfritz/50wL7mdz/

Q & A
О Курсе

Пожалуйста, пройдите опрос
https://otus.pw/lf2f/ 

Спасибо
за внимание!
